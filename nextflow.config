manifest {
    author = 'Keiler Collier'
    description = 'NextFlow script designed to map and call variants from short-read (Illumina or Illumina-like) data and a provided reference.'
    mainScript = 'main.nf'
    name = 'OikosMap'
    nextflowVersion = '>=25.0.0' //this is the version of NextFlow I initially developed the pipeline on. It might work for others.
    version = '1.0.0'
}

cleanup = true

params {
// Params for upper-resource limits:
    max_cpus = Runtime.runtime.availableProcessors()
    totalMemoryGB = Runtime.runtime.maxMemory() / 1024 / 1024 / 1024 
    memoryToUseGB = (totalMemoryGB * 0.8).round(2)

//input params
    help = false
    indir = null
    suffix = '_{R1,R2}.fq.gz'
    refseq = null
    ind_vcfs = false
    threads = max_cpus / 2
    prefix = 'out'
}

process {
    resourceLimits = [ cpus: params.max_cpus, memory: params.memoryToUseGB, time: 72.h ]
}


//defines execution profiles for different environments
profiles {
    standard {
        conda.enabled = true
        conda.cacheDir = "${launchDir}/conda_cache"
        conda.channels = ['bioconda', 'conda-forge']
        report.overwrite = true
        process {
            conda = ['bcftools=1.20.0', 'samtools=1.20.0','fastp=1.0','bwa=0.7']
        }
    }
    chpc {
        conda.enabled = false
        process {
            conda = null
            beforeScript = 'export PATH="/usr/local/bin:$PATH"'
        }
    }
}